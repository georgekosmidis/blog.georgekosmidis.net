{
  "Type": "post",
  "Slang": "error-handling-in-asp-net-core-web-api",
  "Title": "Error handling in ASP.NET Core Web API",
  "Description": "<p>We all know the traditional try-catch blocks and -used correctly- there is of course nothing wrong with them! But even though all is good with that, ASP.NET Core has an even better way of doing things, two ways actually, that can make our code cleaner and easier to read! By following the <em>&#8220;Middleware&#8221;</em> approach, we extract all our custom exception handling code from within the actions and centralizing it in one place thus, cleaner code!</p>\n<p>In this post we will explore these three cases, and starting from the simple try-catch block we will refactor towards a custom error handling middleware.</p>\n<p>",
  "DatePublished": "2019-06-26T15:09:39+02:00",
  "DateModified": "2019-08-08T18:08:18+02:00",
  "Image": null,
  "Tags": [
    "ASP.NET Core",
    "Error Handling",
    "Middleware",
    "Web API",
    "ASP.NET Core"
  ]
}